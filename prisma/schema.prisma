datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model UserModel {
  id             Int    @id @default(autoincrement())
  email          String @unique(map: "email_UNIQUE")
  name           String
  hashedPassword String
  passwordSalt   String
  roleId         Int
  statusId       Int

  createdAt DateTime @default(now())
  createdBy Int      @default(0)
  updatedAt DateTime @default(now())
  updatedBy Int      @default(0)
  deleted   Int      @default(0) @db.TinyInt

  @@map("User")
}

model UserSessionTokenModel {
  id    Int    @id @default(autoincrement())
  token String @unique(map: "token_UNIQUE") @db.VarChar(500)

  createdAt DateTime @default(now())
  createdBy Int      @default(0)
  updatedAt DateTime @default(now())
  updatedBy Int      @default(0)
  deleted   Int      @default(0) @db.TinyInt

  @@map("UserSessionToken")
}

model EnquiryModel {
  id          Int    @id @default(autoincrement())
  name        String
  email       String
  companyName String
  phoneNo     String
  comment     String @db.VarChar(2000)
  statusId    Int

  createdAt DateTime @default(now())
  createdBy Int      @default(0)
  updatedAt DateTime @default(now())
  updatedBy Int      @default(0)
  deleted   Int      @default(0) @db.TinyInt

  @@map("Enquiry")
}

model EducationModel {
  id          Int    @id @default(autoincrement())
  degree      String
  subject     String
  schoolName  String
  description String @db.VarChar(2000)
  startMonth  Int
  startYear   Int
  endMonth    Int
  endYear     Int
  isCurrent   Int    @db.TinyInt

  createdAt DateTime @default(now())
  createdBy Int      @default(0)
  updatedAt DateTime @default(now())
  updatedBy Int      @default(0)
  deleted   Int      @default(0) @db.TinyInt

  @@map("Education")
}

model WorkModel {
  id          Int    @id @default(autoincrement())
  title       String
  companyName String
  description String @db.VarChar(2000)
  startMonth  Int
  startYear   Int
  endMonth    Int
  endYear     Int
  isCurrent   Int    @db.TinyInt

  createdAt DateTime @default(now())
  createdBy Int      @default(0)
  updatedAt DateTime @default(now())
  updatedBy Int      @default(0)
  deleted   Int      @default(0) @db.TinyInt

  @@map("Work")
}
